[
  {
    "name": "Query with hole",
    "diagram": "((\"1\") \"+\" (\"2\"))\n(() \"+\" (\"2\"))\n((() \"+\" ()) \"*\" ())\n(() \"*\" ())",
    "query": "(() \"+\" ())",
    "results": [
      "((\"1\") \"+\" (\"2\"))",
      "(() \"+\" (\"2\"))",
      "((() \"+\" ()) \"*\" ())"
    ]
  },
  {
    "name": "Query with name definition",
    "diagram": "(d\"a\" \"=\" (\"1\"))\n(u\"a\")",
    "query": "(d\"a\" \"=\" ())",
    "results": [
      "(d\"a\" \"=\" (\"1\"))"
    ]
  },
  {
    "name": "Query with name usage",
    "diagram": "((\"1\") \",\" (u\"a\"))\n(u\"a\")\n(u\"b\")",
    "query": "(u\"a\")",
    "results": [
      "((\"1\") \",\" (u\"a\"))",
      "(u\"a\")"
    ]
  },
  {
    "name": "Query with other usage",
    "diagram": "((\"1\") \",\" (u\"a\"))\n((d\"1\") \",\" (\"a\"))\n((\"2\") \",\" (\"a\"))",
    "query": "((\"1\") \",\" (\"a\"))",
    "results": [
      "((\"1\") \",\" (u\"a\"))",
      "((d\"1\") \",\" (\"a\"))"
    ]
  },
  {
    "name": "Query with star",
    "diagram": "(\"a\")\n(\"a\" \"1\" \"2\")\n(\"a\" \"1\" \"2\" \"3\")\n(\"a\" \"b\")",
    "query": "(\"a\" [/[0-9]+/ /[0-9]+/]*)",
    "results": [
      "(\"a\")",
      "(\"a\" \"1\" \"2\")"
    ]
  },
  {
    "name": "Query with type",
    "diagram": "((\"1\"): int \"+\" (\"2\"): int): int\n((\"1\"): int \"+\" (\"2\"): int): long",
    "query": "(() \"+\" ()): int",
    "results": [
      "((\"1\"): int \"+\" (\"2\"): int): int"
    ]
  },
  {
    "name": "Arrays",
    "diagram": "((u\"a\") \"[\" (u\"i\") \"]\")\n(((\"new\" \" \" u\"int\" \"[\" (\"2\") \"]\") \"[\" (\"0\") \"]\") \"=\" (\"2\"))",
    "query": "(() \"[\" () \"]\")",
    "results": [
      "((u\"a\") \"[\" (u\"i\") \"]\")",
      "(((\"new\" \" \" u\"int\" \"[\" (\"2\") \"]\") \"[\" (\"0\") \"]\") \"=\" (\"2\"))"
    ]
  },
  {
    "name": "Java method invocation",
    "diagram": "((u\"List\" \".\" u\"of\" \"(\" \")\") \".\" u\"size\" \"(\" \")\")\n((\"new\" \" \" u\"String\" \"(\" (\"\\\"Hello\\\"\") \")\") \".\" u\"replace\" \"(\" (\"'e'\") \",\" (\"'a'\") \")\")",
    "query": "(() \".\" /.+/ \"(\" [() [\",\" ()]*] \")\")\n",
    "results": [
      "((u\"List\" \".\" u\"of\" \"(\" \")\") \".\" u\"size\" \"(\" \")\")",
      "((\"new\" \" \" u\"String\" \"(\" (\"\\\"Hello\\\"\") \")\") \".\" u\"replace\" \"(\" (\"'e'\") \",\" (\"'a'\") \")\")"
    ]
  },
  {
    "name": "Query with any",
    "diagram": "((\"1\") \"+\" (\"2\"))\n((\"1\") \"-\" (\"2\"))\n((\"1\") (\"1\") (\"2\"))\n((\"1\") \"+\" \"-\" (\"2\"))",
    "query": "(() _ ())",
    "results": [
      "((\"1\") \"+\" (\"2\"))",
      "((\"1\") \"-\" (\"2\"))",
      "((\"1\") (\"1\") (\"2\"))"
    ]
  },
  {
    "name": "Query with alternatives",
    "diagram": "((\"1\") \"+\" (\"2\"))\n((\"1\") \"-\" (\"2\"))\n((\"1\") (\"1\") (\"2\"))\n((\"1\") \"<\" \">\" (\"2\"))",
    "query": "(() [\"+\" | \"-\" | \"*\" | \"/\"] ())",
    "results": [
      "((\"1\") \"+\" (\"2\"))",
      "((\"1\") \"-\" (\"2\"))"
    ]
  },
  {
    "name": "Query with ternary operator",
    "diagram": "((((\"1\") \"==\" (\"1\")) \"|\" ((\"2\") \"==\" (\"3\"))) \"?\" (\"\\\"Hello\\\"\") \":\" (\"\\\"world\\\"\"))",
    "query": "((_ \"==\" _) \"?\" _ \":\" _)",
    "results": [
    ]
  }
]